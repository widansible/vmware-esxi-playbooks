---
- hosts: all
  vars_files:
    - vars.yml

  tasks:
    - name: Get start time
      block:
        - setup:
            filter: ansible_date_time
          register: start_time
        - set_fact:
            start_time: "{{ lookup('pipe','date \"+%T %Z %F\"') }}"
        - name: Start Time
          debug:
            msg: "{{ start_time }}"
      delegate_to: localhost
      tags: always

    - name: Check ESXi Version
      shell: vmware -v
      register: version_before

# Make sure all VMs already backuped, stopped, and migrated before entering maintenance mode and patching

    - name: Enter Maintenance Mode
      shell: esxcli system maintenanceMode set --enable true
      ignore_errors: yes

    - name: Patch esxi to {{ PATCH_PROFILE }}
      shell: esxcli software profile update -d {{ PATCH_FILE_PATH }} -p {{ PATCH_PROFILE }} --no-hardware-warning

    - name: Reboot ... (Please wait while reboot on progress)
      shell: esxcli system shutdown reboot --reason "patching"
      ignore_errors: yes

    - name: Wait for server to restart
      local_action:
        module: wait_for
          host={{ inventory_hostname }}
          port=22
          delay=180

    - name: Exit Maintenance Mode
      shell: esxcli system maintenanceMode set --enable false
      ignore_errors: yes

    - name: Check ESXi Version
      shell: vmware -v
      register: version_after

    - name: Get end time
      block:
        - setup:
            filter: ansible_date_time
          register: end_time
        - set_fact:
            end_time: "{{ lookup('pipe','date \"+%T %Z %F\"') }}"
        - name: End Time
          debug:
            msg: "{{ end_time }}"
      delegate_to: localhost
      tags: always

    - name: Show ESXi Version before patching
      debug:
        msg: "{{ version_before.stdout }}"
    - name: Show ESXi Version after patching
      debug:
        msg: "{{ version_after.stdout }}"
